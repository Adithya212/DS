#include <stdio.h>
void swap(int *xp, int *yp)
{
    int temp = *xp;
    *xp = *yp;
    *yp = temp;
}
void display(int a[], int n)
{
    for (int i = 0; i < n; i++)
    {
        printf("%d\t", a[i]);
    }
}
int read(int a[], int n)
{
    printf("Enter the size of the array:");
    scanf("%d", &n);
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
    }
    return n;
}
int partition(int a[], int lb, int up)
{

    int start, end, pivot;
    start = lb;
    end = up;
    pivot = a[lb];

    while (start < end)
    {
        while (a[start] <= pivot)
        {
            start++;
        }
        while (a[end] > pivot)
        {
            end--;
        }
        if (start < end)
        {
            swap(&a[start], &a[end]);
        }
    }
    swap(&a[end], &a[lb]);
    return end;
}
void quickSort(int A[], int lb, int up)
{
    int loc, n;
    if (lb < up)
    {

        loc = partition(A, lb, up);
        quickSort(A, lb, loc - 1);
        quickSort(A, loc + 1, up);
    }
}

int main()
{

    int a[50], m, n;
    m = read(a, n);
    printf("\n%d", m);
    printf("\nunsorted array is:\t");
    display(a, m);
    quickSort(a, 0, m - 1);
    printf("\nsorted array is:\t");
    display(a, m);

    return 0;
}
